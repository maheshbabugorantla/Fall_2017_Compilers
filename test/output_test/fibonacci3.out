;STRINGinput:="Please input an integer number: ";STRINGspace:=" ";STRINGeol:="\n";
; IR code
;INTret1;
;Print store: c 2 left: !T1
;=======================
;current register = !T2 current call F(n-1)
;Function name = F
;Function parameters = n-1
;current register = !T3 current call F(n-2)
;Function name = F
;Function parameters = n-2
;-----------------------multiple functions
;Print store: c !T10 left: $-1
;Print store: c 0 left: !T11
;Print store: c 1 left: !T13
;INTi,end,result;
;
;Print store: c 0 left: !T16
;Print store: c !T16 left: $-1
++++++++++++++++
;i:=i+1
;Print store: c $-2 left: !T17
;=======================
;current register = !T18 current call F(i)
;Function name = F
;Function parameters = i
;-----------------------;Print store: c !T21 left: $-1
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_F_L
; LINK 2
; STOREI 2 !T1
; LE $2 !T1 label1
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; STOREI 1 !T4
; SUBI $2 !T4 !T5
; PUSH !T5
; JSR FUNC_id_F_L
; POP
; POP !T6
; STOREI !T6 !T2
; POP r3
; POP r2
; POP r1
; POP r0
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; STOREI 2 !T7
; SUBI $2 !T7 !T8
; PUSH !T8
; JSR FUNC_id_F_L
; POP
; POP !T9
; STOREI !T9 !T3
; POP r3
; POP r2
; POP r1
; POP r0
; ADDI !T2 !T3 !T10
; STOREI !T10 $-1
; STOREI $-1 $3
; UNLINK
; RET
; JUMP label2
; LABEL label1
; STOREI 0 !T11
; NE $2 !T11 label3
; STOREI 0 !T12
; STOREI !T12 $3
; UNLINK
; RET
; JUMP label4
; LABEL label3
; STOREI 1 !T13
; NE $2 !T13 label5
; STOREI 1 !T14
; STOREI !T14 $3
; UNLINK
; RET
; JUMP label6
; LABEL label5
; STOREI 1 !T15
; STOREI !T15 $3
; UNLINK
; RET
; LABEL label6
; LABEL label4
; LABEL label2
; UNLINK
; RET
; LABEL FUNC_id_main_L
; LINK 4
; WRITES input
; READI $-2
; STOREI 0 !T16
; STOREI !T16 $-1
; LABEL label7
; STOREI $-2 !T17
; EQ $-1 !T17 label8
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; PUSH $-1
; JSR FUNC_id_F_L
; POP
; POP !T19
; STOREI !T19 !T18
; POP r3
; POP r2
; POP r1
; POP r0
; STOREI !T18 $-3
; WRITEI $-1
; WRITES space
; WRITEI $-3
; WRITES eol
; STOREI 1 !T20
; ADDI $-1 !T20 !T21
; STOREI !T21 $-1
; JUMP label7
; LABEL label8
; STOREI 0 !T22
; STOREI !T22 $2
; UNLINK
; RET
str input "Please input an integer number: "
str space " "
str eol "\n"
var ret1
var i
var end
var result
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_F_L
link 30
;2 $-2 false false
move 2 $-2
; handled?
move $2 r0
; handled2?
move $-2 r1
cmpi r0 r1
jle label1
push r0
push r1
push r2
push r3
push ;(return value)
;1 $-3 false false
move 1 $-3
; handled?
move $-3 r0
; handled2?
move $2 r1
subi r0 r1
move r1 $-4 ; - STORE_HANDLED
push $-4 ;using temp
jsr FUNC_id_F_L
pop
pop $-6 ;using temp
;$-6 $-8 false false
move $-6 r0
move r0 $-8
pop r3
pop r2
pop r1
pop r0
push r0
push r1
push r2
push r3
push ;(return value)
;2 $-9 false false
move 2 $-9
; handled?
move $-9 r0
; handled2?
move $2 r1
subi r0 r1
move r1 $-10 ; - STORE_HANDLED
push $-10 ;using temp
jsr FUNC_id_F_L
pop
pop $-12 ;using temp
;$-12 $-14 false false
move $-12 r0
move r0 $-14
pop r3
pop r2
pop r1
pop r0
; handled?
move $-8 r0
; handled2?
move $-14 r1
addi r0 r1
move r1 $-15 ; + STORE_HANDLED
;$-15 $-1 false false
move $-15 r0
move r0 $-1
;$-1 $3 false false
move $-1 r0
move r0 $3
unlnk
ret
jmp label2
label label1
;0 $-17 false false
move 0 $-17
; handled?
move $2 r0
; handled2?
move $-17 r1
cmpi r0 r1
jne label3
;0 $-18 false false
move 0 $-18
;$-18 $3 false false
move $-18 r0
move r0 $3
unlnk
ret
jmp label4
label label3
;1 $-20 false false
move 1 $-20
; handled?
move $2 r0
; handled2?
move $-20 r1
cmpi r0 r1
jne label5
;1 $-21 false false
move 1 $-21
;$-21 $3 false false
move $-21 r0
move r0 $3
unlnk
ret
jmp label6
label label5
;1 $-23 false false
move 1 $-23
;$-23 $3 false false
move $-23 r0
move r0 $3
unlnk
ret
label label6
label label4
label label2
unlnk
ret
label FUNC_id_main_L
link 32
sys writes input
sys readi $-2
;0 $-4 false false
move 0 $-4
;$-4 $-1 false false
move $-4 r0
move r0 $-1
label label7
;$-2 $-6 false false
move $-2 r0
move r0 $-6
; handled?
move $-1 r0
; handled2?
move $-6 r1
cmpi r0 r1
jeq label8
push r0
push r1
push r2
push r3
push ;(return value)
push $-1
jsr FUNC_id_F_L
pop
pop $-7 ;using temp
;$-7 $-9 false false
move $-7 r0
move r0 $-9
pop r3
pop r2
pop r1
pop r0
;$-9 $-3 false false
move $-9 r0
move r0 $-3
sys writei $-1
sys writes space
sys writei $-3
sys writes eol
;1 $-11 false false
move 1 $-11
; handled?
move $-1 r0
; handled2?
move $-11 r1
addi r0 r1
move r1 $-12 ; + STORE_HANDLED
;$-12 $-1 false false
move $-12 r0
move r0 $-1
jmp label7
label label8
;0 $-14 false false
move 0 $-14
;$-14 $2 false false
move $-14 r0
move r0 $2
unlnk
ret
