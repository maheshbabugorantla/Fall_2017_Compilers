;STRINGinput:="Please enter an integer number: ";STRINGeol:="\n";
; IR code
;INTret;INTtret;
;Print store: c 1 left: !T1
;=======================
;current register = !T3 current call factorial(a-1)
;Function name = factorial
;-----------------------;only one function call with operation: or no function calltret*a
;Print store: c !T7 left: $-1
;INTnum;INTresult;
;Print store: c 1 left: !T8
;only one function call with operation: or no function call1
;Print store: c 1 left: !T9
;Print store: c !T9 left: $-2
;Print store: c 1 left: !T10
;=======================
;current register = !T11 current call factorial(num)
;Function name = factorial
;-----------------------;only one function call with operation: or no function call0
;Print store: c 0 left: !T13
;Print store: c !T13 left: $-2
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_factorial_L
; LINK 3
; STOREI 1 !T1
; NE $2 !T1 label1
; STOREI 1 !T2
; STOREI !T2 $3
; UNLINK
; RET
; JUMP label2
; LABEL label1
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; STOREI 1 !T4
; SUBI $2 !T4 !T5
; PUSH !T5
; JSR FUNC_id_factorial_L
; POP
; POP !T6
; STOREI !T6 !T3
; POP r3
; POP r2
; POP r1
; POP r0
; STOREI !T3 $-2
; MULTI $-2 $2 !T7
; STOREI !T7 $-1
; LABEL label2
; STOREI $-1 $3
; UNLINK
; RET
; LABEL FUNC_id_main_L
; LINK 3
; WRITES input
; READI $-1
; STOREI 1 !T8
; NE $-1 !T8 label3
; STOREI 1 !T9
; STOREI !T9 $-2
; JUMP label4
; LABEL label3
; STOREI 1 !T10
; LE $-1 !T10 label5
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; PUSH $-1
; JSR FUNC_id_factorial_L
; POP
; POP !T12
; STOREI !T12 !T11
; POP r3
; POP r2
; POP r1
; POP r0
; STOREI !T11 $-2
; JUMP label6
; LABEL label5
; STOREI 0 !T13
; STOREI !T13 $-2
; LABEL label6
; LABEL label4
; WRITEI $-2
; WRITES eol
; STOREI 0 !T14
; STOREI !T14 $2
; UNLINK
; RET
str input "Please enter an integer number: "
str eol "\n"
var ret
var tret
var num
var result
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_factorial_L
link 23
;1 $-3 false false
move 1 $-3
; handled?
move $2 r0
; handled2?
move $-3 r1
cmpi r0 r1
jne label1
;1 $-4 false false
move 1 $-4
;$-4 $3 false false
move $-4 r0
move r0 $3
unlnk
ret
jmp label2
label label1
push r0
push r1
push r2
push r3
push ;(return value)
;1 $-6 false false
move 1 $-6
; handled?
move $-6 r0
; handled2?
move $2 r1
subi r0 r1
move r1 $-7 ; - STORE_HANDLED
push $-7 ;using temp
jsr FUNC_id_factorial_L
pop
pop $-9 ;using temp
;$-9 $-11 false false
move $-9 r0
move r0 $-11
pop r3
pop r2
pop r1
pop r0
;$-11 $-2 false false
move $-11 r0
move r0 $-2
; handled?
move $-2 r0
; handled2?
move $2 r1
muli r0 r1
move r1 $-13 ; * STORE_HANDLED
;$-13 $-1 false false
move $-13 r0
move r0 $-1
label label2
;$-1 $3 false false
move $-1 r0
move r0 $3
unlnk
ret
label FUNC_id_main_L
link 23
sys writes input
sys readi $-1
;1 $-3 false false
move 1 $-3
; handled?
move $-1 r0
; handled2?
move $-3 r1
cmpi r0 r1
jne label3
;1 $-4 false false
move 1 $-4
;$-4 $-2 false false
move $-4 r0
move r0 $-2
jmp label4
label label3
;1 $-6 false false
move 1 $-6
; handled?
move $-1 r0
; handled2?
move $-6 r1
cmpi r0 r1
jle label5
push r0
push r1
push r2
push r3
push ;(return value)
push $-1
jsr FUNC_id_factorial_L
pop
pop $-7 ;using temp
;$-7 $-9 false false
move $-7 r0
move r0 $-9
pop r3
pop r2
pop r1
pop r0
;$-9 $-2 false false
move $-9 r0
move r0 $-2
jmp label6
label label5
;0 $-11 false false
move 0 $-11
;$-11 $-2 false false
move $-11 r0
move r0 $-2
label label6
label label4
sys writei $-2
sys writes eol
;0 $-13 false false
move 0 $-13
;$-13 $2 false false
move $-13 r0
move r0 $2
unlnk
ret
