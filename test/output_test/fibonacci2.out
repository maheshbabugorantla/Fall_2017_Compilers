;STRINGinput:="Please input an integer number: ";STRINGspace:=" ";STRINGeol:="\n";
; IR code
;INTret1,ret2;
;Print store: c 2 left: !T1
;=======================
;current register = !T2 current call F(n-1)
;Function name = F
;-----------------------;=======================
;current register = !T6 current call F(n-2)
;Function name = F
;-----------------------;RETURN: No Function;Print store: c 0 left: !T11
;RETURN: No Function;Print store: c 1 left: !T13
;RETURN: No Function;RETURN: No Function;INTi,end,result;
;
;Print store: c 0 left: !T16
;Print store: c !T16 left: $-3
;Print store: c $-2 left: !T17
;=======================
;current register = !T18 current call F(i)
;Function name = F
;-----------------------;Print store: c !T21 left: $-3
;RETURN: No Function; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_F_L
; LINK 3
; STOREI 2 !T1
; LE $2 !T1 label1
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; STOREI 1 !T3
; SUBI $2 !T3 !T4
; PUSH !T4
; JSR FUNC_id_F_L
; POP
; POP !T5
; STOREI !T5 !T2
; POP r3
; POP r2
; POP r1
; POP r0
; STOREI !T2 $-2
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; STOREI 2 !T7
; SUBI $2 !T7 !T8
; PUSH !T8
; JSR FUNC_id_F_L
; POP
; POP !T9
; STOREI !T9 !T6
; POP r3
; POP r2
; POP r1
; POP r0
; STOREI !T6 $-1
; ADDI $-2 $-1 !T10
; STOREI !T10 $3
; UNLINK
; RET
; JUMP label2
; LABEL label1
; STOREI 0 !T11
; NE $2 !T11 label3
; STOREI 0 !T12
; STOREI !T12 $3
; UNLINK
; RET
; JUMP label4
; LABEL label3
; STOREI 1 !T13
; NE $2 !T13 label5
; STOREI 1 !T14
; STOREI !T14 $3
; UNLINK
; RET
; JUMP label6
; LABEL label5
; STOREI 1 !T15
; STOREI !T15 $3
; UNLINK
; RET
; LABEL label6
; LABEL label4
; LABEL label2
; UNLINK
; RET
; LABEL FUNC_id_main_L
; LINK 4
; WRITES input
; READI $-2
; STOREI 0 !T16
; STOREI !T16 $-3
; LABEL label7
; STOREI $-2 !T17
; EQ $-3 !T17 label8
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; PUSH $-3
; JSR FUNC_id_F_L
; POP
; POP !T19
; STOREI !T19 !T18
; POP r3
; POP r2
; POP r1
; POP r0
; STOREI !T18 $-1
; WRITEI $-3
; WRITES space
; WRITEI $-1
; WRITES eol
; STOREI 1 !T20
; ADDI $-3 !T20 !T21
; STOREI !T21 $-3
; JUMP label7
; LABEL label8
; STOREI 0 !T22
; STOREI !T22 $2
; UNLINK
; RET
str input "Please input an integer number: "
str space " "
str eol "\n"
var ret1
var ret2
var i
var end
var result
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_F_L
link 31
move 2 $-3
move $2 r0
move $-3 r1
cmpi r0 r1
jle label1
push r0
push r1
push r2
push r3
push ;(return value)
move 1 $-4
move $-4 r0
move $2 r1
subi r0 r1
move r1 $-5 ; - STORE_HANDLED
push $-5 ;using temp
jsr FUNC_id_F_L
pop
pop $-7 ;using temp
move $-7 r0
move r0 $-9
pop r3
pop r2
pop r1
pop r0
move $-9 r0
move r0 $-2
push r0
push r1
push r2
push r3
push ;(return value)
move 2 $-11
move $-11 r0
move $2 r1
subi r0 r1
move r1 $-12 ; - STORE_HANDLED
push $-12 ;using temp
jsr FUNC_id_F_L
pop
pop $-14 ;using temp
move $-14 r0
move r0 $-16
pop r3
pop r2
pop r1
pop r0
move $-16 r0
move r0 $-1
move $-2 r0
move $-1 r1
addi r0 r1
move r1 $-18 ; + STORE_HANDLED
move $-18 r0
move r0 $3
unlnk
ret
jmp label2
label label1
move 0 $-20
move $2 r0
move $-20 r1
cmpi r0 r1
jne label3
move 0 $-21
move $-21 r0
move r0 $3
unlnk
ret
jmp label4
label label3
move 1 $-23
move $2 r0
move $-23 r1
cmpi r0 r1
jne label5
move 1 $-24
move $-24 r0
move r0 $3
unlnk
ret
jmp label6
label label5
move 1 $-26
move $-26 r0
move r0 $3
unlnk
ret
label label6
label label4
label label2
unlnk
ret
label FUNC_id_main_L
link 32
sys writes input
sys readi $-2
move 0 $-4
move $-4 r0
move r0 $-3
label label7
move $-2 r0
move r0 $-6
move $-3 r0
move $-6 r1
cmpi r0 r1
jeq label8
push r0
push r1
push r2
push r3
push ;(return value)
push $-3
jsr FUNC_id_F_L
pop
pop $-7 ;using temp
move $-7 r0
move r0 $-9
pop r3
pop r2
pop r1
pop r0
move $-9 r0
move r0 $-1
sys writei $-3
sys writes space
sys writei $-1
sys writes eol
move 1 $-11
move $-3 r0
move $-11 r1
addi r0 r1
move r1 $-12 ; + STORE_HANDLED
move $-12 r0
move r0 $-3
jmp label7
label label8
move 0 $-14
move $-14 r0
move r0 $2
unlnk
ret
