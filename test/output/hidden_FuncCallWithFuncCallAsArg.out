;
; IR code
;INTreturnValue;
;only one function call with operation: or no function call0
;Print store: c 0 left: !T1
;Print store: c !T1 left: $-1
;only one function call with operation: or no function callarg1+arg2
;Print store: c !T2 left: $-1
;RETURN: No Function;
;RETURN: No Function;INTarg1,arg2,result;
;only one function call with operation: or no function call1
;Print store: c 1 left: !T3
;Print store: c !T3 left: $-3
;only one function call with operation: or no function call1
;Print store: c 1 left: !T4
;Print store: c !T4 left: $-2
;only one function call with operation: or no function call0
;Print store: c 0 left: !T5
;Print store: c !T5 left: $-1
;=======================
;current register = !T6 current call returnArgument(arg1)
;Function name = returnArgument
;current register = !T7 current call returnArgument(arg2)
;Function name = returnArgument
;-----------------------multiple functions
;Print store: c !T6,!T7 left: $-1
;Print store: c addArgs left: $-1
;RETURN: No Function; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_addArgs_L
; LINK 2
; STOREI 0 !T1
; STOREI !T1 $-1
; ADDI $3 $2 !T2
; STOREI !T2 $-1
; STOREI $-1 $4
; UNLINK
; RET
; LABEL FUNC_id_returnArgument_L
; LINK 1
; STOREI $2 $3
; UNLINK
; RET
; LABEL FUNC_id_main_L
; LINK 4
; STOREI 1 !T3
; STOREI !T3 $-3
; STOREI 1 !T4
; STOREI !T4 $-2
; STOREI 0 !T5
; STOREI !T5 $-1
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; PUSH $-3
; JSR FUNC_id_returnArgument_L
; POP
; POP !T8
; STOREI !T8 !T6
; POP r3
; POP r2
; POP r1
; POP r0
; PUSH r0
; PUSH r1
; PUSH r2
; PUSH r3
; PUSH ;(return value)
; PUSH $-2
; JSR FUNC_id_returnArgument_L
; POP
; POP !T9
; STOREI !T9 !T7
; POP r3
; POP r2
; POP r1
; POP r0
; STOREI !T6,!T7 $-1
; STOREI addArgs $-1
; WRITEI $-1
; STOREI 0 !T10
; STOREI !T10 $2
; UNLINK
; RET
var returnValue
var arg1
var arg2
var result
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_addArgs_L
link 18
move 0 $-2
move $-2 r0
move r0 $-1
move $3 r0
move $2 r1
addi r0 r1
move r1 $-4 ; + STORE_HANDLED
move $-4 r0
move r0 $-1
move $-1 r0
move r0 $4
unlnk
ret
label FUNC_id_returnArgument_L
link 17
move $2 r0
move r0 $3
unlnk
ret
label FUNC_id_main_L
link 20
move 1 $-4
move $-4 r0
move r0 $-3
move 1 $-6
move $-6 r0
move r0 $-2
move 0 $-8
move $-8 r0
move r0 $-1
push r0
push r1
push r2
push r3
push ;(return value)
push $-3
jsr FUNC_id_returnArgument_L
pop
pop $-10 ;using temp
move $-10 r0
move r0 $-12
pop r3
pop r2
pop r1
pop r0
push r0
push r1
push r2
push r3
push ;(return value)
push $-2
jsr FUNC_id_returnArgument_L
pop
pop $-13 ;using temp
move $-13 r0
move r0 $-15
pop r3
pop r2
pop r1
pop r0
move $-16 r0
move r0 $-1
move addArgs $-1
sys writei $-1
move 0 $-17
move $-17 r0
move r0 $2
unlnk
ret
