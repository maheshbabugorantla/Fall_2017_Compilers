;*****IR Start Unoptimized*****
;0>> PUSH
;5>> JSR FUNC_id_main_L
;6>> HALT
;7>> LABEL FUNC_id_factorial_L
;8>> LINK 3
;9>> STOREI 1 !T0
;10>> NE $2 !T0 label1
;11>> STOREI 1 !T1
;12>> STOREI !T1 $7
;13>> UNLINK
;14>> RET
;15>> JUMP label2
;16>> LABEL label1
;17>> STOREI 1 !T2
;18>> SUBI $2 !T2 !T3
;19>> PUSH
;21>> PUSH !T3
;22>> JSR FUNC_id_factorial_L
;23>> POP
;25>> POP !T4
;26>> STOREI !T4 $-2
;27>> MULTI $-2 $2 !T5
;28>> STOREI !T5 $-1
;29>> LABEL label2
;30>> STOREI $-1 $7
;31>> UNLINK
;32>> RET
;33>> LABEL FUNC_id_main_L
;34>> LINK 3
;35>> WRITES id_input
;36>> READI $-1
;37>> STOREI 1 !T6
;38>> NE $-1 !T6 label3
;39>> STOREI 1 !T7
;40>> STOREI !T7 $-2
;41>> JUMP label4
;42>> LABEL label3
;43>> STOREI 1 !T8
;44>> LE $-1 !T8 label5
;45>> PUSH
;47>> PUSH $-1
;48>> JSR FUNC_id_factorial_L
;49>> POP
;51>> POP !T9
;52>> STOREI !T9 $-2
;53>> JUMP label6
;54>> LABEL label5
;55>> STOREI 0 !T10
;56>> STOREI !T10 $-2
;57>> LABEL label6
;58>> LABEL label4
;59>> WRITEI $-2
;60>> WRITES id_eol
;61>> STOREI 0 !T11
;62>> STOREI !T11 $6
;63>> UNLINK
;64>> RET
;*****IR End Unoptimized*****
;*****Start Tiny Code Unoptimized*****
;str id_input "Please enter an integer number: "
;str id_eol "\n"
;push
;push
;push
;push
;push
;jsr FUNC_id_main_L
;sys halt
;label FUNC_id_factorial_L
;link 3
;move 1 r0
;move $2 r1
;cmpi r1 r0
;jne label1
;move 1 r0
;move r0 $7
;unlnk
;ret
;jmp label2
;label label1
;move 1 r0
;move $2 r1
;move r1 r2
;subi r0 r2
;push
;push r0
;push r1
;push r2
;push r3
;push r2
;jsr FUNC_id_factorial_L
;pop
;pop r3
;pop r2
;pop r1
;pop r0
;pop r0
;move r0 r2
;move r2 r0
;muli r1 r0
;move r0 r1
;move r1 $-1
;label label2
;move $-1 r0
;move r0 $7
;unlnk
;ret
;label FUNC_id_main_L
;link 3
;sys writes id_input
;sys readi r0
;move 1 r1
;move r0 $-1
;cmpi r0 r1
;jne label3
;move 1 r0
;move r0 r1
;move r1 $-2
;jmp label4
;label label3
;move 1 r0
;move $-1 r1
;cmpi r1 r0
;jle label5
;push
;push r0
;push r1
;push r2
;push r3
;push $-1
;jsr FUNC_id_factorial_L
;pop
;pop r3
;pop r2
;pop r1
;pop r0
;pop r0
;move r0 r1
;move r1 $-2
;jmp label6
;label label5
;move 0 r0
;move r0 r1
;move r1 $-2
;label label6
;label label4
;sys writei $-2
;sys writes id_eol
;move 0 r0
;move r0 $6
;unlnk
;ret
;*****End Tiny Code Unoptimized*****

;*****IR Start Optimized*****
;0>> PUSH
;1>> PUSH
;2>> PUSH
;3>> PUSH
;4>> PUSH
;5>> JSR FUNC_id_main_L
;6>> HALT
;7>> LABEL FUNC_id_factorial_L
;8>> LINK 3
;9>> STOREI 1 !T0
;10>> NE $2 !T0 label1
;11>> STOREI 1 !T1
;12>> STOREI !T1 $7
;13>> UNLINK
;14>> RET
;15>> JUMP label2
;16>> LABEL label1
;17>> STOREI 1 !T2
;18>> SUBI $2 !T2 !T3
;19>> PUSH
;20>> PUSHREG
;21>> PUSH !T3
;22>> JSR FUNC_id_factorial_L
;23>> POP
;24>> POPREG
;25>> POP !T4
;26>> STOREI !T4 $-2
;27>> MULTI $-2 $2 !T5
;28>> STOREI !T5 $-1
;29>> LABEL label2
;30>> STOREI $-1 $7
;31>> UNLINK
;32>> RET
;33>> LABEL FUNC_id_main_L
;34>> LINK 3
;35>> WRITES id_input
;36>> READI $-1
;37>> STOREI 1 !T6
;38>> NE $-1 !T6 label3
;39>> STOREI 1 !T7
;40>> STOREI !T7 $-2
;41>> JUMP label4
;42>> LABEL label3
;43>> STOREI 1 !T8
;44>> LE $-1 !T8 label5
;45>> PUSH
;46>> PUSHREG
;47>> PUSH $-1
;48>> JSR FUNC_id_factorial_L
;49>> POP
;50>> POPREG
;51>> POP !T9
;52>> STOREI !T9 $-2
;53>> JUMP label6
;54>> LABEL label5
;55>> STOREI 0 !T10
;56>> STOREI !T10 $-2
;57>> LABEL label6
;58>> LABEL label4
;59>> WRITEI $-2
;60>> WRITES id_eol
;61>> STOREI 0 !T11
;62>> STOREI !T11 $6
;63>> UNLINK
;64>> RET
;*****IR End Optimized*****
;*****Start Tiny Code Optimized*****
str id_input "Please enter an integer number: "
str id_eol "\n"
push
push
push
push
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_factorial_L
link 3
move $2 r0
move 1 r1
cmpi r0 r1
jne label1
move 1 $7
unlnk
ret
jmp label2
label label1
move $2 r0
move r0 r1
subi 1 r1
push
push r0
push r1
push r2
push r3
push r1
jsr FUNC_id_factorial_L
pop
pop r3
pop r2
pop r1
pop r0
pop r1
move r1 r2
muli r0 r2
move r2 r0
move r0 $-1
label label2
move $-1 r0
move r0 $7
unlnk
ret
label FUNC_id_main_L
link 3
sys writes id_input
sys readi r0
move 1 r1
move r0 $-1
cmpi r0 r1
jne label3
move 1 r0
move r0 $-2
jmp label4
label label3
move $-1 r0
move 1 r1
cmpi r0 r1
jle label5
push
push r0
push r1
push r2
push r3
push $-1
jsr FUNC_id_factorial_L
pop
pop r3
pop r2
pop r1
pop r0
pop r0
move r0 r1
move r1 $-2
jmp label6
label label5
move 0 r0
move r0 $-2
label label6
label label4
sys writei $-2
sys writes id_eol
move 0 $6
unlnk
ret
;*****End Tiny Code Optimized*****

