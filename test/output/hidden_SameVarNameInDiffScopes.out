;STRINGeol:="\n";STRINGstar:="*";STRINGplus:="+";STRINGequal:="=";
; IR code
;FLOATa,b,c;
;only one function call with operation: or no function callarg1
;Print store: c $2 left: $-1
;only one function call with operation: or no function callarg2
;Print store: c $3 left: $-2
;only one function call with operation: or no function calla+b
;Print store: c !T1 left: $-3
;FLOATa,b,multiplyresult;
;only one function call with operation: or no function call2.0
;Print store: c 2.0 left: !T2
;Print store: c !T2 left: $-1
;only one function call with operation: or no function call3.0
;Print store: c 3.0 left: !T3
;Print store: c !T3 left: $-2
myFunction(a,b)
myFunction(b,a)
myFunction(b)
myFunction(b,b+a*c,c*d+e)
;=======================
Left: multiplyresult right: myFunction(a,b)+myFunction(b,a)+myFunction(b)+4+myFunction(b,b+a*c,c*d+e) postfix: !T4 !T5 + !T6 + 4 + !T7 +
;current register = !T4 current call myFunction(a,b)
Function name = myFunction
length: 2 myFunction(a:b)
first length: 1
last length: 1
Function parameters = a b
;current register = !T5 current call myFunction(b,a)
Function name = myFunction
length: 2 myFunction(b:a)
first length: 1
last length: 1
Function parameters = b a
;current register = !T6 current call myFunction(b)
Function name = myFunction
length: 1 myFunction(b):myFunction(b)
first length: 1
last length: 1
Function parameters = b
;current register = !T7 current call myFunction(b,b+a*c,c*d+e)
Function name = myFunction
length: 3 myFunction(b:c*d+e)
first length: 1
last length: 1
Function parameters = b b+a*c c*d+e
-----------------------; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_myFunction_L
; LINK 4
; STOREF $2 $-1
; STOREF $3 $-2
; ADDF $-1 $-2 !T1
; STOREF !T1 $-3
; STOREF $-3 $4
; UNLINK
; RET
; LABEL FUNC_id_main_L
; LINK 4
; STOREF 2.0 !T2
; STOREF !T2 $-1
; STOREF 3.0 !T3
; STOREF !T3 $-2
; WRITEF $-3
; WRITES eol
; STOREI 0 !T4
; STOREI !T4 $2
; UNLINK
; RET
str eol "\n"
str star "*"
str plus "+"
str equal "="
var a
var b
var c
var a
var b
var multiplyresult
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_myFunction_L
link 9
;$2 $-1 false false
move $2 r0
move r0 $-1
;$3 $-2 false false
move $3 r0
move r0 $-2
; handled?
move $-1 r0
; handled2?
move $-2 r1
addi r0 r1
move r1 $-4 ; + STORE_HANDLED
;$-4 $-3 false false
move $-4 r0
move r0 $-3
;$-3 $4 false false
move $-3 r0
move r0 $4
unlnk
ret
label FUNC_id_main_L
link 9
;2.0 $-4 false false
move 2.0 $-4
;$-4 $-1 false false
move $-4 r0
move r0 $-1
;3.0 $-6 false false
move 3.0 $-6
;$-6 $-2 false false
move $-6 r0
move r0 $-2
sys writer $-3
sys writes eol
;0 $-8 false false
move 0 $-8
;$-8 $2 false false
move $-8 r0
move r0 $2
unlnk
ret
