;STRINGeol:="\n";STRINGstar:="*";STRINGplus:="+";STRINGequal:="=";
; IR code
;FLOATa,b,c;
;In infix to postfix: arg1*3.0
arg1*3.0
arg1*3.0
arg1 3.0 *
; post fix function: arg1 3.0 *
; THIS SHOULD NEVER HIT: Function in assign statement
;arg1 3.0 *
;Print store: c 3.0 left: !T1
;Print store: c !T2 left: $-1
;In infix to postfix: arg2
arg2
arg2
arg2
; post fix function: arg2
; THIS SHOULD NEVER HIT: Function in assign statement
;arg2
;AHHHH left: b right: arg2
;Print store: c $3 left: $-2
;In infix to postfix: a+b/4.0
a+b/4.0
a+b/4.0
a b 4.0 / +
; post fix function: a b 4.0 / +
; THIS SHOULD NEVER HIT: Function in assign statement
;a b 4.0 / +
;Print store: c 4.0 left: !T3
;Print store: c !T5 left: $-3
;AHHHH left: null right: c
;FLOATd,e,multiplyresult;
;In infix to postfix: 2.0
2.0
2.0
2.0
; post fix function: 2.0
; THIS SHOULD NEVER HIT: Function in assign statement
;2.0
;AHHHH left: d right: 2.0
;Print store: c 2.0 left: !T6
;Print store: c !T6 left: $-1
;In infix to postfix: 2.0
2.0
2.0
2.0
; post fix function: 2.0
; THIS SHOULD NEVER HIT: Function in assign statement
;2.0
;AHHHH left: e right: 2.0
;Print store: c 2.0 left: !T7
;Print store: c !T7 left: $-2
;In infix to postfix: myFunction(d,e)+1
myFunction(d,e)+1
myFunction(d,e)
!T8+1
!T8 1 +
; post fix function: !T8 1 +
; THIS SHOULD NEVER HIT: Function in assign statement
;only one function call: myFunction(d,e)+1
;In infix to postfix: d+e
d+e
d+e
d e +
; post fix function: d e +
; THIS SHOULD NEVER HIT: Function in assign statement
;only one function call: d+e
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_myFunction_L
; LINK 4
; STOREF 3.0 !T1
; MULTF $2 !T1 !T2
; STOREF !T2 $-1
; STOREF $3 $-2
; STOREF 4.0 !T3
; DIVF $-2 !T3 !T4
; ADDF $-1 !T4 !T5
; STOREF !T5 $-3
; WRITEF $-3
; WRITES eol
; WRITEF $-1
; WRITES eol
; WRITEF $-2
; WRITES eol
; STOREF $-3 $4
; UNLINK
; RET
; LABEL FUNC_id_main_L
; LINK 4
; STOREF 2.0 !T6
; STOREF !T6 $-1
; STOREF 2.0 !T7
; STOREF !T7 $-2
; WRITEF $-3
; WRITES eol
; WRITEF $-3
; WRITES eol
; STOREI 0 !T8
; STOREI !T8 $2
; UNLINK
; RET
str eol "\n"
str star "*"
str plus "+"
str equal "="
var a
var b
var c
var d
var e
var multiplyresult
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_myFunction_L
link 13
;3.0 $-4 false false
move 3.0 $-4
; handled?
move $2 r0
; handled2?
move $-4 r1
mulr r0 r1
move r1 $-5 ; * STORE_HANDLED
;$-5 $-1 false false
move $-5 r0
move r0 $-1
;$3 $-2 false false
move $3 r0
move r0 $-2
;4.0 $-7 false false
move 4.0 $-7
; handled?
move $-7 r0
; handled2?
move $-2 r1
divr r0 r1
move r1 $-8 ; / STORE_HANDLED
; handled?
move $-1 r0
; handled2?
move $-8 r1
addr r0 r1
move r1 $-9 ; + STORE_HANDLED
;$-9 $-3 false false
move $-9 r0
move r0 $-3
sys writer $-3
sys writes eol
sys writer $-1
sys writes eol
sys writer $-2
sys writes eol
;$-3 $4 false false
move $-3 r0
move r0 $4
unlnk
ret
label FUNC_id_main_L
link 13
;2.0 $-4 false false
move 2.0 $-4
;$-4 $-1 false false
move $-4 r0
move r0 $-1
;2.0 $-6 false false
move 2.0 $-6
;$-6 $-2 false false
move $-6 r0
move r0 $-2
sys writer $-3
sys writes eol
sys writer $-3
sys writes eol
;0 $-8 false false
move 0 $-8
;$-8 $2 false false
move $-8 r0
move r0 $2
unlnk
ret
