; IR code
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_F_L
; LINK 3
; STOREI 2 !T0
;LE n !T0 label1
THIS IS A FUNCTION CALL: ret1 Fasdf(n-1)
; PUSH (return value)
; PUSH arguments
; JSR FUNC_id_Fasdf_L
; POP arguments
; POP the value returned
THIS IS A FUNCTION CALL: ret2 F(n-2)
; PUSH (return value)
; PUSH arguments
; JSR FUNC_id_F_L
; POP arguments
; POP the value returned
ret1+ret2
;ADDI $-1 $-2 !T1
; STOREF needs a change needs conversion here $3
; UNLINK
; RET
;JUMP label2
;LABEL label1
; STOREI 0 !T2
;NE n !T2 label3
0
;STOREI 0 !T3
;STOREI !T3 null
; STOREF needs a change needs conversion here $3
; UNLINK
; RET
;JUMP label4
;LABEL label3
; STOREI 1 !T4
;NE n !T4 label5
1
;STOREI 1 !T5
;STOREI !T5 null
; STOREF needs a change needs conversion here $3
; UNLINK
; RET
;JUMP label6
;LABEL label5
1
;STOREI 1 !T6
;STOREI !T6 null
; STOREF needs a change needs conversion here $3
; UNLINK
; RET
;LABEL label6
;LABEL label4
;LABEL label2
; LABEL FUNC_id_main_L
; LINK 4
;WRITES input
; READI $-2
;STOREI 0 !T7
;STOREI !T7 i
;LABEL label7
; STOREF $-2 !T8
;EQ i !T8 label8
THIS IS A FUNCTION CALL: result F(i)
; PUSH (return value)
; PUSH arguments
; JSR FUNC_id_F_L
; POP arguments
; POP the value returned
; WRITEI $-1
;WRITES space
; WRITEI $-3
;WRITES eol
;STOREI 1 !T9
;ADDI $-1 !T9 !T10
; STOREI !T10 $-1
;JUMP label7
;LABEL label8
0
;STOREI 0 !T11
;STOREI !T11 null
; STOREF needs a change needs conversion here $3
; UNLINK
; RET
;tiny code
str input "Please input an integer number: "
str space " "
str eol "\n"
label F
var ret1
var ret2
move 2 r-1
cmpi n r-1
jle label1
move ret1 r0
addi ret2 r0
jmp label2
label label1
move 0 r1
cmpi n r1
jne label3
move 0 r2
move r2
jmp label4
label label3
move 1 r3
cmpi n r3
jne label5
move 1 r4
move r4
jmp label6
label label5
move 1 r5
move r5
label label6
label label4
label label2
label main
var i
var end
var result
sys writes input
sys readi end
move 0 r6
move r6 i
label label7
move end r7
cmpr i r7
jeq label8
sys writei i
sys writes space
sys writei result
sys writes eol
move 1 r8
move i r9
addi r8 r9
move r9 i
jmp label7
label label8
move 0 r10
move r10
sys halt
