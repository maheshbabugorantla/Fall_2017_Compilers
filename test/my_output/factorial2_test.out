; IR code
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_factorial_L
; LINK 3
; STOREI 1 !T1
; NE $2 !T1 label1
; STOREI 1 !T2
; STOREI !T2 $3
; UNLINK
; RET
; JUMP label2
; LABEL label1
; PUSH (return value)
; STOREI 1 !T3
; SUBI $2 !T3 !T4
; PUSH !T4
; JSR FUNC_id_factorial_L
; POP
; POP !T5
; STOREI !T5 $-2
; MULTI $-2 $2 !T6
; STOREI !T6 $-1
; LABEL label2
; STOREI $-1 $3
; UNLINK
; RET
; LABEL FUNC_id_main_L
; LINK 3
; WRITES input
; READI $-1
; STOREI 1 !T7
; NE $-1 !T7 label3
; STOREI 1 !T8
; STOREI !T8 $-2
; JUMP label4
; LABEL label3
; STOREI 1 !T9
; LE $-1 !T9 label5
; PUSH (return value)
; PUSH $-1
; JSR FUNC_id_factorial_L
; POP
; POP !T10
; STOREI !T10 $-2
; JUMP label6
; LABEL label5
; STOREI 0 !T11
; STOREI !T11 $-2
; LABEL label6
; LABEL label4
; WRITEI $-2
; WRITES eol
; STOREI 0 !T12
; STOREI !T12 $2
; UNLINK
; RET
; +++++++++++++
; CUSTOM NODE LIST
; +++++++++++++
; 0 ; PUSH 1 -1 -1
; 1 ; JSR FUNC_id_main_L 2 -1 0
; 2 ; HALT -1 -1 1
; 3 ; LABEL FUNC_id_factorial_L 4 -1 2
; 4 ; LINK 3 5 -1 3
; 5 ; STOREI 1 !T1 6 -1 4
; 6 ; NE $2 !T1 label1 7 12 5
; 7 ; STOREI 1 !T2 8 -1 6
; 8 ; STOREI !T2 $3 9 -1 7
; 9 ; UNLINK 10 -1 8
; 10 ; RET -1 -1 9
; 11 ; JUMP label2 23 -1 10
; 12 ; LABEL label1 13 -1 11
; 13 ; PUSH (return value) 14 -1 12
; 14 ; STOREI 1 !T3 15 -1 13
; 15 ; SUBI $2 !T3 !T4 16 -1 14
; 16 ; PUSH !T4 17 -1 15
; 17 ; JSR FUNC_id_factorial_L 18 -1 16
; 18 ; POP 19 -1 17
; 19 ; POP !T5 20 -1 18
; 20 ; STOREI !T5 $-2 21 -1 19
; 21 ; MULTI $-2 $2 !T6 22 -1 20
; 22 ; STOREI !T6 $-1 23 -1 21
; 23 ; LABEL label2 24 -1 22
; 24 ; STOREI $-1 $3 25 -1 23
; 25 ; UNLINK 26 -1 24
; 26 ; RET -1 -1 25
; 27 ; LABEL FUNC_id_main_L 28 -1 26
; 28 ; LINK 3 29 -1 27
; 29 ; WRITES input 30 -1 28
; 30 ; READI $-1 31 -1 29
; 31 ; STOREI 1 !T7 32 -1 30
; 32 ; NE $-1 !T7 label3 33 36 31
; 33 ; STOREI 1 !T8 34 -1 32
; 34 ; STOREI !T8 $-2 35 -1 33
; 35 ; JUMP label4 50 -1 34
; 36 ; LABEL label3 37 -1 35
; 37 ; STOREI 1 !T9 38 -1 36
; 38 ; LE $-1 !T9 label5 39 46 37
; 39 ; PUSH (return value) 40 -1 38
; 40 ; PUSH $-1 41 -1 39
; 41 ; JSR FUNC_id_factorial_L 42 -1 40
; 42 ; POP 43 -1 41
; 43 ; POP !T10 44 -1 42
; 44 ; STOREI !T10 $-2 45 -1 43
; 45 ; JUMP label6 49 -1 44
; 46 ; LABEL label5 47 -1 45
; 47 ; STOREI 0 !T11 48 -1 46
; 48 ; STOREI !T11 $-2 49 -1 47
; 49 ; LABEL label6 50 -1 48
; 50 ; LABEL label4 51 -1 49
; 51 ; WRITEI $-2 52 -1 50
; 52 ; WRITES eol 53 -1 51
; 53 ; STOREI 0 !T12 54 -1 52
; 54 ; STOREI !T12 $2 55 -1 53
; 55 ; UNLINK 56 -1 54
; 56 ; RET -1 -1 55
;tiny code
str input "Please enter an integer number: "
str eol "\n"
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_factorial_L
link 3
move 1 r0
cmpi $2 r0
jne label1
move 1 r1
move r1 $3
unlnk
ret
jmp label2
label label1
push
move 1 r2
move $2 r3
subi r2 r3
push r3
jsr FUNC_id_factorial_L
pop
pop r4
move r4 $-2
move $-2 r5
muli $2 r5
move r5 $-1
label label2
move $-1 r5
move r5 $3
unlnk
ret
label FUNC_id_main_L
link 3
sys writes input
sys readi $-1
move 1 r6
cmpi $-1 r6
jne label3
move 1 r7
move r7 $-2
jmp label4
label label3
move 1 r8
cmpi $-1 r8
jle label5
push
push $-1
jsr FUNC_id_factorial_L
pop
pop r9
move r9 $-2
jmp label6
label label5
move 0 r10
move r10 $-2
label label6
label label4
sys writei $-2
sys writes eol
move 0 r11
move r11 $2
unlnk
ret
