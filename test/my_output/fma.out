; IR code
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_add_L
; LINK 2
;ADDF $2 $3 !T0
; STOREF !T0 $-1
; STOREF $-1 $4
; UNLINK
; RET
; LABEL FUNC_id_multiply_L
; LINK 2
;MULTF $2 $3 !T1
; STOREF !T1 $-1
; STOREF $-1 $4
; UNLINK
; RET
; LABEL FUNC_id_main_L
; LINK 6
;WRITES intro
;WRITES first
; READF $-1
;WRITES second
; READF $-2
;WRITES third
; READF $-3
; PUSH (return value)
; PUSH arguments
; PUSH arguments
; JSR FUNC_id_multiply_L
; POP arguments
; POP arguments
; POP the value returned
; PUSH (return value)
; PUSH arguments
; PUSH arguments
; JSR FUNC_id_add_L
; POP arguments
; POP arguments
; POP the value returned
; WRITEF $-1
;WRITES star
; WRITEF $-2
;WRITES plus
; WRITEF $-3
;WRITES equal
; WRITEF $-4
;WRITES eol
;STOREI 0 !T2
; STOREI !T2 $4
; UNLINK
; RET
;tiny code
str intro "You will be asked for three float numbers\n"
str first "Please enter the first float number: "
str second "Please enter the second float number: "
str third "Please enter the third float number: "
str eol "\n"
str star "*"
str plus "+"
str equal "="
label add
var result
move a r-1
addr b r-1
move r-1 result
label multiply
var result
move a r0
mulr b r0
move r0 result
label main
var a
var b
var c
var addresult
var multiplyresult
sys writes intro
sys writes first
sys readr a
sys writes second
sys readr b
sys writes third
sys readr c
sys writer a
sys writes star
sys writer b
sys writes plus
sys writer c
sys writes equal
sys writer addresult
sys writes eol
sys halt
