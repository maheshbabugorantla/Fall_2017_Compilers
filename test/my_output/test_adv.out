;INTcount,enough;FLOATnewapprox,approx,num,tolerance,diff;STRINGeol:="\n";STRINGspace:=" ";
; IR code
;
;only one function call with operation: or no function call0.0001
;Print store: c 0.0001 left: !T1
;Print store: c !T1 left: tolerance
;only one function call with operation: or no function callnum
;Print store: c num left: approx
;only one function call with operation: or no function call0
;Print store: c 0 left: !T2
;Print store: c !T2 left: count
;only one function call with operation: or no function call0.0
;Print store: c 0.0 left: !T3
;Print store: c !T3 left: diff
;
;Print store: c 0 left: !T4
;Print store: c !T4 left: enough
;Print store: c 1 left: !T5
;only one function call with operation: or no function callcount+1
;Print store: c !T7 left: count
;only one function call with operation: or no function call0.5*(approx+num/approx)
;Print store: c 0.5 left: !T8
;Print store: c !T11 left: newapprox
;only one function call with operation: or no function callapprox-newapprox
;Print store: c !T12 left: diff
;Print store: c 0.0 left: !T13
;only one function call with operation: or no function call1
;Print store: c 1 left: !T14
;Print store: c !T14 left: enough
;Print store: c 0.0 left: !T15
;only one function call with operation: or no function call1
;Print store: c 1 left: !T17
;Print store: c !T17 left: enough
;only one function call with operation: or no function callnewapprox
;Print store: c newapprox left: approx
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_main_L
; LINK 1
; STOREF 0.0001 !T1
; STOREF !T1 tolerance
; READF num
; STOREF num approx
; STOREI 0 !T2
; STOREI !T2 count
; STOREF 0.0 !T3
; STOREF !T3 diff
; STOREI 0 !T4
; STOREI !T4 enough
; LABEL label1
; STOREF 1 !T5
; EQ enough !T5 label2
; STOREI 1 !T6
; ADDI count !T6 !T7
; STOREI !T7 count
; STOREF 0.5 !T8
; DIVF num approx !T9
; ADDF approx !T9 !T10
; MULTF !T8 !T10 !T11
; STOREF !T11 newapprox
; SUBF approx newapprox !T12
; STOREF !T12 diff
; STOREF 0.0 !T13
; LE diff !T13 label3
; GE diff tolerance label5
; STOREI 1 !T14
; STOREI !T14 enough
; JUMP label6
; LABEL label5
; LABEL label6
; JUMP label4
; LABEL label3
; STOREF 0.0 !T15
; SUBF !T15 tolerance !T16
; LE diff !T16 label7
; STOREI 1 !T17
; STOREI !T17 enough
; JUMP label8
; LABEL label7
; LABEL label8
; LABEL label4
; STOREF newapprox approx
; JUMP label1
; LABEL label2
; WRITEF approx
; WRITES space
; WRITEI count
; WRITES eol
; UNLINK
; RET
var count
var enough
var newapprox
var approx
var num
var tolerance
var diff
str eol "\n"
str space " "
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_main_L
link 24
move 0.0001 $-1
move $-1 r0
move r0 tolerance
sys readr num
move num r0
move r0 approx
move 0 $-3
move $-3 r0
move r0 count
move 0.0 $-5
move $-5 r0
move r0 diff
move 0 $-7
move $-7 r0
move r0 enough
label label1
move 1 $-9
move enough r0
move $-9 r1
cmpi r0 r1
jeq label2
move 1 $-10
move count r0
move $-10 r1
addi r0 r1
move r1 $-11 ; + STORE_HANDLED
move $-11 r0
move r0 count
move 0.5 $-13
move approx r0
move num r1
divr r0 r1
move r1 $-14 ; / STORE_HANDLED
move approx r0
move $-14 r1
addr r0 r1
move r1 $-15 ; + STORE_HANDLED
move $-13 r0
move $-15 r1
mulr r0 r1
move r1 $-16 ; * STORE_HANDLED
move $-16 r0
move r0 newapprox
move newapprox r0
move approx r1
subr r0 r1
move r1 $-18 ; - STORE_HANDLED
move $-18 r0
move r0 diff
move 0.0 $-20
move diff r0
move $-20 r1
cmpr r0 r1
jle label3
move diff r0
move tolerance r1
cmpr r0 r1
jge label5
move 1 $-21
move $-21 r0
move r0 enough
jmp label6
label label5
label label6
jmp label4
label label3
move 0.0 $-23
move tolerance r0
move $-23 r1
subr r0 r1
move r1 $-24 ; - STORE_HANDLED
move diff r0
move $-24 r1
cmpr r0 r1
jle label7
move 1 $-25
move $-25 r0
move r0 enough
jmp label8
label label7
label label8
label label4
move newapprox r0
move r0 approx
jmp label1
label label2
sys writer approx
sys writes space
sys writei count
sys writes eol
unlnk
ret
