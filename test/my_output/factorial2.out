; IR code
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_factorial_L
; LINK 3
; STOREI 1 !T0
;NE a !T0 label1
;STOREI 1 !T1
; STOREI !T1 $3
; UNLINK
; RET
;JUMP label2
;LABEL label1
; PUSH (return value)
; PUSH arguments
; JSR FUNC_id_factorial_L
; POP arguments
; POP the value returned
;MULTI $-2 $2 !T2
; STOREI !T2 $-1
;LABEL label2
; STOREI $-1 $3
; UNLINK
; RET
; LABEL FUNC_id_main_L
; LINK 3
;WRITES input
; READI $-1
; STOREI 1 !T3
;NE num !T3 label3
;STOREI 1 !T4
;STOREI !T4 result
;JUMP label4
;LABEL label3
; STOREI 1 !T5
;LE num !T5 label5
; PUSH (return value)
; PUSH arguments
; JSR FUNC_id_factorial_L
; POP arguments
; POP the value returned
;JUMP label6
;LABEL label5
;STOREI 0 !T6
;STOREI !T6 result
;LABEL label6
;LABEL label4
; WRITEI $-2
;WRITES eol
;STOREI 0 !T7
; STOREI !T7 $3
; UNLINK
; RET
;tiny code
str input "Please enter an integer number: "
str eol "\n"
label factorial
var ret
var tret
move 1 r-1
cmpi a r-1
jne label1
jmp label2
label label1
move tret r1
muli a r1
move r1 ret
label label2
label main
var num
var result
sys writes input
sys readi num
move 1 r2
cmpi num r2
jne label3
move 1 r3
move r3 result
jmp label4
label label3
move 1 r4
cmpi num r4
jle label5
jmp label6
label label5
move 0 r5
move r5 result
label label6
label label4
sys writei result
sys writes eol
sys halt
