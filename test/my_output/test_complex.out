; PUSH SYMBOLINTa,b,c;FLOATp,s,t;STRINGnewline:="\n";
; IR code
; PUSH SYMBOL
;postfix2: 20
;number rec before: 1
;number rec after: 1
;left: a right: 20 true
;number before: 1 number after: 1
;only one function call with operation: or no function call20
;20
;Print store: c 20 left: !T1
;Print store: c !T1 left: a
;postfix2: 30
;number rec before: 2
;number rec after: 2
;left: b right: 30 true
;number before: 2 number after: 2
;only one function call with operation: or no function call30
;30
;Print store: c 30 left: !T2
;Print store: c !T2 left: b
;postfix2: 40
;number rec before: 3
;number rec after: 3
;left: c right: 40 true
;number before: 3 number after: 3
;only one function call with operation: or no function call40
;40
;Print store: c 40 left: !T3
;Print store: c !T3 left: c
;postfix2: c+a*b+(a*b+c)/a+20
;number rec before: 4
;number rec after: 4
;left: c right: c+a*b+(a*b+c)/a+20 true
;number before: 4 number after: 4
;only one function call with operation: or no function callc+a*b+(a*b+c)/a+20
;c a b * + a b * c + a / + 20 +
;Print store: c !T11 left: c
;postfix2: b*b+a
;number rec before: 12
;number rec after: 12
;left: b right: b*b+a true
;number before: 12 number after: 12
;only one function call with operation: or no function callb*b+a
;b b * a +
;Print store: c !T13 left: b
;postfix2: (b*a)/a
;number rec before: 14
;number rec after: 14
;left: a right: (b*a)/a true
;number before: 14 number after: 14
;only one function call with operation: or no function call(b*a)/a
;b a * a /
;Print store: c !T15 left: a
;postfix2: 2.5
;number rec before: 16
;number rec after: 16
;left: p right: 2.5 false
;number before: 16 number after: 16
;only one function call with operation: or no function call2.5
;2.5
;Print store: c 2.5 left: !T16
;Print store: c !T16 left: p
;postfix2: 1.2
;number rec before: 17
;number rec after: 17
;left: s right: 1.2 false
;number before: 17 number after: 17
;only one function call with operation: or no function call1.2
;1.2
;Print store: c 1.2 left: !T17
;Print store: c !T17 left: s
;postfix2: 0.7
;number rec before: 18
;number rec after: 18
;left: t right: 0.7 false
;number before: 18 number after: 18
;only one function call with operation: or no function call0.7
;0.7
;Print store: c 0.7 left: !T18
;Print store: c !T18 left: t
;postfix2: t*p-s+p*s
;number rec before: 19
;number rec after: 19
;left: t right: t*p-s+p*s false
;number before: 19 number after: 19
;only one function call with operation: or no function callt*p-s+p*s
;t p * s - p s * +
;Print store: c !T22 left: t
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_main_L
; LINK 1
; STOREI 20 !T1
; STOREI !T1 a
; STOREI 30 !T2
; STOREI !T2 b
; STOREI 40 !T3
; STOREI !T3 c
; MULTI a b !T4
; ADDI c !T4 !T5
; MULTI a b !T6
; ADDI !T6 c !T7
; DIVI !T7 a !T8
; ADDI !T5 !T8 !T9
; STOREI 20 !T10
; ADDI !T9 !T10 !T11
; STOREI !T11 c
; MULTI b b !T12
; ADDI !T12 a !T13
; STOREI !T13 b
; MULTI b a !T14
; DIVI !T14 a !T15
; STOREI !T15 a
; WRITEI c
; WRITES newline
; WRITEI b
; WRITES newline
; WRITEI a
; WRITES newline
; STOREF 2.5 !T16
; STOREF !T16 p
; STOREF 1.2 !T17
; STOREF !T17 s
; STOREF 0.7 !T18
; STOREF !T18 t
; MULTF t p !T19
; SUBF !T19 s !T20
; MULTF p s !T21
; ADDF !T20 !T21 !T22
; STOREF !T22 t
; WRITEF t
; WRITES newline
; UNLINK
; RET
var a
var b
var c
var p
var s
var t
str newline "\n"
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_main_L
link 24
move 20 $-1
move $-1 r0
move r0 a
move 30 $-3
move $-3 r0
move r0 b
move 40 $-5
move $-5 r0
move r0 c
move a r0
move b r1
muli r0 r1
move r1 $-7 ; * STORE_HANDLED
move c r0
move $-7 r1
addi r0 r1
move r1 $-8 ; + STORE_HANDLED
move a r0
move b r1
muli r0 r1
move r1 $-9 ; * STORE_HANDLED
move $-9 r0
move c r1
addi r0 r1
move r1 $-10 ; + STORE_HANDLED
move a r0
move $-10 r1
divi r0 r1
move r1 $-11 ; / STORE_HANDLED
move $-8 r0
move $-11 r1
addi r0 r1
move r1 $-12 ; + STORE_HANDLED
move 20 $-13
move $-12 r0
move $-13 r1
addi r0 r1
move r1 $-14 ; + STORE_HANDLED
move $-14 r0
move r0 c
move b r0
move b r1
muli r0 r1
move r1 $-16 ; * STORE_HANDLED
move $-16 r0
move a r1
addi r0 r1
move r1 $-17 ; + STORE_HANDLED
move $-17 r0
move r0 b
move b r0
move a r1
muli r0 r1
move r1 $-19 ; * STORE_HANDLED
move a r0
move $-19 r1
divi r0 r1
move r1 $-20 ; / STORE_HANDLED
move $-20 r0
move r0 a
sys writei c
sys writes newline
sys writei b
sys writes newline
sys writei a
sys writes newline
move 2.5 $-22
move $-22 r0
move r0 p
move 1.2 $-24
move $-24 r0
move r0 s
move 0.7 $-26
move $-26 r0
move r0 t
move t r0
move p r1
mulr r0 r1
move r1 $-28 ; * STORE_HANDLED
move s r0
move $-28 r1
subr r0 r1
move r1 $-29 ; - STORE_HANDLED
move p r0
move s r1
mulr r0 r1
move r1 $-30 ; * STORE_HANDLED
move $-29 r0
move $-30 r1
addr r0 r1
move r1 $-31 ; + STORE_HANDLED
move $-31 r0
move r0 t
sys writer t
sys writes newline
unlnk
ret
