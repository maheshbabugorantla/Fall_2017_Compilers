; PUSH SYMBOLINTa,b,c;
; IR code
; PUSH SYMBOL
;postfix2: 20
;number rec before: 1
;number rec after: 1
;left: a right: 20 true
;number before: 1 number after: 1
;only one function call with operation: or no function call20
;20
;Print store: c 20 left: !T1
;Print store: c !T1 left: a
;postfix2: 30
;number rec before: 2
;number rec after: 2
;left: b right: 30 true
;number before: 2 number after: 2
;only one function call with operation: or no function call30
;30
;Print store: c 30 left: !T2
;Print store: c !T2 left: b
;postfix2: 40
;number rec before: 3
;number rec after: 3
;left: c right: 40 true
;number before: 3 number after: 3
;only one function call with operation: or no function call40
;40
;Print store: c 40 left: !T3
;Print store: c !T3 left: c
;postfix2: c+a*b+(a*b+c)/a+20
;number rec before: 4
;number rec after: 4
;left: c right: c+a*b+(a*b+c)/a+20 true
;number before: 4 number after: 4
;only one function call with operation: or no function callc+a*b+(a*b+c)/a+20
;c a b * + a b * c + a / + 20 +
;Print store: c !T11 left: c
;postfix2: b*b+a
;number rec before: 12
;number rec after: 12
;left: b right: b*b+a true
;number before: 12 number after: 12
;only one function call with operation: or no function callb*b+a
;b b * a +
;Print store: c !T13 left: b
;postfix2: (b*a)/a
;number rec before: 14
;number rec after: 14
;left: a right: (b*a)/a true
;number before: 14 number after: 14
;only one function call with operation: or no function call(b*a)/a
;b a * a /
;Print store: c !T15 left: a
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_main_L
; LINK 1
; STOREI 20 !T1
; STOREI !T1 a
; STOREI 30 !T2
; STOREI !T2 b
; STOREI 40 !T3
; STOREI !T3 c
; MULTI a b !T4
; ADDI c !T4 !T5
; MULTI a b !T6
; ADDI !T6 c !T7
; DIVI !T7 a !T8
; ADDI !T5 !T8 !T9
; STOREI 20 !T10
; ADDI !T9 !T10 !T11
; STOREI !T11 c
; MULTI b b !T12
; ADDI !T12 a !T13
; STOREI !T13 b
; MULTI b a !T14
; DIVI !T14 a !T15
; STOREI !T15 a
; WRITEI c
; WRITEI b
; WRITEI a
; UNLINK
; RET
var a
var b
var c
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_main_L
link 17
move 20 $-1
move $-1 r0
move r0 a
move 30 $-3
move $-3 r0
move r0 b
move 40 $-5
move $-5 r0
move r0 c
move a r0
move b r1
muli r0 r1
move r1 $-7 ; * STORE_HANDLED
move c r0
move $-7 r1
addi r0 r1
move r1 $-8 ; + STORE_HANDLED
move a r0
move b r1
muli r0 r1
move r1 $-9 ; * STORE_HANDLED
move $-9 r0
move c r1
addi r0 r1
move r1 $-10 ; + STORE_HANDLED
move a r0
move $-10 r1
divi r0 r1
move r1 $-11 ; / STORE_HANDLED
move $-8 r0
move $-11 r1
addi r0 r1
move r1 $-12 ; + STORE_HANDLED
move 20 $-13
move $-12 r0
move $-13 r1
addi r0 r1
move r1 $-14 ; + STORE_HANDLED
move $-14 r0
move r0 c
move b r0
move b r1
muli r0 r1
move r1 $-16 ; * STORE_HANDLED
move $-16 r0
move a r1
addi r0 r1
move r1 $-17 ; + STORE_HANDLED
move $-17 r0
move r0 b
move b r0
move a r1
muli r0 r1
move r1 $-19 ; * STORE_HANDLED
move a r0
move $-19 r1
divi r0 r1
move r1 $-20 ; / STORE_HANDLED
move $-20 r0
move r0 a
sys writei c
sys writei b
sys writei a
unlnk
ret
