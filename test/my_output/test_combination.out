;INTa,b,c;
; IR code
;
;In infix to postfix: 20
;=======================;only one function call with operation: or no function call20
;Print store: c 20 left: !T1
;Print store: c !T1 left: a
;In infix to postfix: 30
;=======================;only one function call with operation: or no function call30
;Print store: c 30 left: !T2
;Print store: c !T2 left: b
;In infix to postfix: 40
;=======================;only one function call with operation: or no function call40
;Print store: c 40 left: !T3
;Print store: c !T3 left: c
;In infix to postfix: c+a*b+(a*b+c)/a+20
;=======================;only one function call with operation: or no function callc+a*b+(a*b+c)/a+20
;Print store: c !T11 left: c
;In infix to postfix: b*b+a
;=======================;only one function call with operation: or no function callb*b+a
;Print store: c !T13 left: b
;In infix to postfix: (b*a)/a
;=======================;only one function call with operation: or no function call(b*a)/a
;Print store: c !T15 left: a
; PUSH
; JSR FUNC_id_main_L
; HALT
; LABEL FUNC_id_main_L
; LINK 1
; STOREI 20 !T1
; STOREI !T1 a
; STOREI 30 !T2
; STOREI !T2 b
; STOREI 40 !T3
; STOREI !T3 c
; MULTI a b !T4
; ADDI c !T4 !T5
; MULTI a b !T6
; ADDI !T6 c !T7
; DIVI !T7 a !T8
; ADDI !T5 !T8 !T9
; STOREI 20 !T10
; ADDI !T9 !T10 !T11
; STOREI !T11 c
; MULTI b b !T12
; ADDI !T12 a !T13
; STOREI !T13 b
; MULTI b a !T14
; DIVI !T14 a !T15
; STOREI !T15 a
; WRITEI c
; WRITEI b
; WRITEI a
; UNLINK
; RET
var a
var b
var c
push
jsr FUNC_id_main_L
sys halt
label FUNC_id_main_L
link 17
;20 $-1 false false
move 20 $-1
;$-1 a false true
move $-1 r0
move r0 a
;30 $-3 false false
move 30 $-3
;$-3 b false true
move $-3 r0
move r0 b
;40 $-5 false false
move 40 $-5
;$-5 c false true
move $-5 r0
move r0 c
; handled?
move a r0
; handled2?
move b r1
muli r0 r1
move r1 $-7 ; * STORE_HANDLED
; handled?
move c r0
; handled2?
move $-7 r1
addi r0 r1
move r1 $-8 ; + STORE_HANDLED
; handled?
move a r0
; handled2?
move b r1
muli r0 r1
move r1 $-9 ; * STORE_HANDLED
; handled?
move $-9 r0
; handled2?
move c r1
addi r0 r1
move r1 $-10 ; + STORE_HANDLED
; handled?
move a r0
; handled2?
move $-10 r1
divi r0 r1
move r1 $-11 ; / STORE_HANDLED
; handled?
move $-8 r0
; handled2?
move $-11 r1
addi r0 r1
move r1 $-12 ; + STORE_HANDLED
;20 $-13 false false
move 20 $-13
; handled?
move $-12 r0
; handled2?
move $-13 r1
addi r0 r1
move r1 $-14 ; + STORE_HANDLED
;$-14 c false true
move $-14 r0
move r0 c
; handled?
move b r0
; handled2?
move b r1
muli r0 r1
move r1 $-16 ; * STORE_HANDLED
; handled?
move $-16 r0
; handled2?
move a r1
addi r0 r1
move r1 $-17 ; + STORE_HANDLED
;$-17 b false true
move $-17 r0
move r0 b
; handled?
move b r0
; handled2?
move a r1
muli r0 r1
move r1 $-19 ; * STORE_HANDLED
; handled?
move a r0
; handled2?
move $-19 r1
divi r0 r1
move r1 $-20 ; / STORE_HANDLED
;$-20 a false true
move $-20 r0
move r0 a
sys writei c
sys writei b
sys writei a
unlnk
ret
